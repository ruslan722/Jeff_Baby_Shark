"""–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ –±–ª–∏–∂–∞–π—à–µ–º—É –≤—Ä–µ–º–µ–Ω–∏"""

import asyncio
from datetime import datetime, timedelta, time

from aiogram import Bot, Dispatcher, Router
from aiogram.types import Message, BotCommand, ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
from models import User

bot = Bot(token="token")
dp = Dispatcher()
SEND_TIME = None
router = Router()

@router.message(Command("set_time"))
async def set_time_handler(message: Message):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è —Ä–∞—Å—Å—ã–ª–∫–∏."""
    print(message.text)
    time_split = message.text.replace('/set_time ', '').split(':')
    hour = int(time_split[0])
    minut = int(time_split[1])

    global SEND_TIME
    SEND_TIME = time(hour, minut)
    user = User.get_by_id(1)
    user.time = SEND_TIME
    user.save()

@router.message(Command("start"))
async def start_handler(msg: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã —Å—Ç–∞—Ä—Ç"""
    await bot.set_my_commands([
        BotCommand(command='start',description='–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞'),
        BotCommand(command='help',description='–°–ø—Ä–∞–≤–∫–∞'),
        BotCommand(command='delete',description='–û—Ç—á–∏—Å–ª–∏—Ç—å—Å—è'),
        BotCommand(command='set_time',description='–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è'),
    ])

    markup = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='–ü—Ä–∏–≤–µ—Ç! üëã')]])
    await msg.answer(text="–ü—Ä–∏–≤–µ—Ç", reply_markup=markup)


async def get_time_notify():
    """–ü–æ–ª—É—á–∏—Ç—å –≤—Ä–µ–º—è –±–ª–∏–∂–∞–π—à–µ–π —Ä–∞—Å—Å—ã–ª–∫–∏"""
    now = datetime.now()
    users = User.filter(User.time > now).order_by(User.time.asc())
    if users.count() > 0:
        return (users.first()).time

async def send_admin():
    """–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    global SEND_TIME
    SEND_TIME = await get_time_notify()
    await bot.send_message(320720102, "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    while True:
        print(datetime.now().time(), SEND_TIME)
        now_time = datetime.now().time()
        now_time = time(now_time.hour, now_time.minute)
        if SEND_TIME and SEND_TIME == now_time:
            # —Ä–∞—Å—Å—ã–ª–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
            for user in User.filter(time=SEND_TIME):
                await bot.send_message(user.tg_user, 'ping')

            SEND_TIME = await get_time_notify()
            print(SEND_TIME)


        now_time = (datetime.now() + timedelta(minutes=1))
        now_time = datetime(now_time.year, now_time.month, now_time.day,
                            now_time.hour, now_time.minute)
        seconds = (now_time - datetime.now()).seconds + 1
        print(datetime.now().time(), now_time.time(), seconds)
        await asyncio.sleep(seconds)


async def on_startup():
    """–û–±–µ—Ä—Ç–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞"""
    asyncio.create_task(send_admin())

